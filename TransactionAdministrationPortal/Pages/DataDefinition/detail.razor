@page "/datadefinition/{id:long}"
@using TransactionProcessor.Entities
@inject HttpClient Http
@inject IApplicationConfiguration config
@inject IUriHelper UriHelper

<div class="card">
    <div class="card-header h1">
        <button class="btn btn-light" onclick="@Back"><span class="oi oi-chevron-left"></span> Back</button>
        Data Definition Details
    </div>
    <div class="card-body">
        @if (loading)
        {
            <loading></loading>
        }
        else
        {
            @if (dataDefinition == null)
            {
                <notfound />
            }
            else
            {
                <div class="row">
                    <div class="col">
                        <div class="btn-group dropright">
                            <button type="button" class="btn btn-light dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @dataDefinition.Name
                            </button>
                            <muted>@dataDefinition.Description</muted>
                            <div class="dropdown-menu">
                                <button type="button" class="dropdown-item" onclick="@(() => OnAddClick(dataDefinition))">
                                    <icon Name="plus"></icon> Add Child
                                </button>
                                <button type="button" class="dropdown-item" onclick="@(() => OnEditClick(dataDefinition))">
                                    <icon Name="pencil"></icon> Edit
                                </button>
                                <button type="button" class="dropdown-item" onclick="@(() => OnDeleteClick(dataDefinition))">
                                    <icon Name="trash"></icon> Delete
                                </button>
                            </div>
                        </div>
                        @if (dataDefinition.IsArray)
                        {
                            <Pill Name="primary">One or More</Pill>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col ml-5">
                        <DataDefinitionList DataDefinition="@dataDefinition" DataDefinitions="@dataDefinitions" OnAddClick="@OnAddClick" OnEditClick="@OnEditClick" OnDeleteClick="@OnDeleteClick" />
                    </div>
                </div>
            }
        }
    </div>
</div>

@functions {

    public void OnAddClick(DataDefinition definition)
    {
        UriHelper.NavigateTo($"/datadefinition/{definition.MasterDataDefinitionId ?? definition.Id}/add/{definition?.Id}");
    }

    public void OnEditClick(DataDefinition definition)
    {
        UriHelper.NavigateTo($"/datadefinition/{definition.MasterDataDefinitionId ?? definition.Id}/edit/{definition?.Id}");
    }

    public void OnDeleteClick(DataDefinition definition)
    {
        UriHelper.NavigateTo($"/datadefinition/{definition.MasterDataDefinitionId ?? definition.Id}/delete/{definition?.Id}");
    }

    private DataDefinition dataDefinition = new DataDefinition();
    private IEnumerable<DataDefinition> dataDefinitions = Enumerable.Empty<DataDefinition>();
    private bool loading = true;
    private string ReturnPath = $"/datadefinition";

    [Parameter]
    private long id { get; set; }

    protected override async Task OnInitAsync()
    {
        dataDefinitions = await Http.GetJsonAsync<IEnumerable<DataDefinition>>($"{config.ApiUrl}/datadefinition/{id}/master");
        dataDefinition = dataDefinitions.FirstOrDefault(definition => !definition.MasterDataDefinitionId.HasValue);
        loading = false;
    }

    private void Back()
    {
        UriHelper.NavigateTo(ReturnPath);
    }
}
