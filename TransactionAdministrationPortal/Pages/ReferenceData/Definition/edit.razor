@page "/referencedata/definition/{id:long}/edit"
@using TransactionProcessor.Entities
@inject HttpClient Http
@inject IApplicationConfiguration config
@inject IUriHelper UriHelper

<div class="card">
    <div class="card-header h2">
        <button class="btn btn-light" onclick="@Back"><span class="oi oi-chevron-left"></span> Back</button>
        Edit Reference Data
    </div>
    @if (loading)
    {
        <div class="card-body">
            <loading />
        </div>
    }
    else
    {
        <EditForm Model="@referenceDataDefinition" OnValidSubmit="@HandleValidSubmit">
            <div class="card-body">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="name">Name</label>
                    <InputText class="form-control" id="name" bind-Value="@referenceDataDefinition.Name" />
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <InputTextArea class="form-control" id="description" bind-Value="@referenceDataDefinition.Description" />
                </div>
            </div>
            <div class="card-footer">
                <button type="submit">Submit</button>
            </div>
        </EditForm>
    }
</div>

@functions {
    private ReferenceDataDefinition referenceDataDefinition { get; set; } = new ReferenceDataDefinition();
    private bool loading = true;
    private string ReturnPath { get => $"/referencedata/definition/{id}"; }

    [Parameter]
    private long id { get; set; }

    protected override async Task OnInitAsync()
    {
        referenceDataDefinition = await Http.GetJsonAsync<ReferenceDataDefinition>($"{config.ApiUrl}/referencedata/definition/{id}");
        loading = false;
    }

    private async Task HandleValidSubmit()
    {
        var result = await Http.SendJsonAsync<ReferenceDataDefinition>(HttpMethod.Put, $"{config.ApiUrl}/referencedata/definition/{id}", referenceDataDefinition);
        Back();
    }

    private void Back()
    {
        UriHelper.NavigateTo(ReturnPath);
    }
}
